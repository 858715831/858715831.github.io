(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{379:function(t,a,v){"use strict";v.r(a);var e=v(4),_=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("笔记来源："),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1PJ411n7xZ",title:"尚硅谷JVM全套教程，百万播放，全网巅峰（宋红康详解java虚拟机）",target:"_blank",rel:"noopener noreferrer"}},[t._v("尚硅谷 JVM 全套教程，百万播放，全网巅峰（宋红康详解 java 虚拟机）"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"_1-jvm-与-java-体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-jvm-与-java-体系结构"}},[t._v("#")]),t._v(" 1.JVM 与 Java 体系结构")]),t._v(" "),a("h2",{attrs:{id:"_1-1-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-前言"}},[t._v("#")]),t._v(" 1.1. 前言")]),t._v(" "),a("p",[t._v("作为 Java 工程师的你曾被伤害过吗？你是否也遇到过这些问题？")]),t._v(" "),a("ul",[a("li",[t._v("运行着的线上系统突然卡死，系统无法访问，甚至直接 OOM")]),t._v(" "),a("li",[t._v("想解决线上 JVM GC 问题，但却无从下手")]),t._v(" "),a("li",[t._v("新项目上线，对各种 JVM 参数设置一脸茫然，直接默认吧然后就 JJ 了")]),t._v(" "),a("li",[t._v("每次面试之前都要重新背一遍 JVM 的一些原理概念性的东西，然而面试官却经常问你在实际项目中如何调优 VM 参数，如何解决 GC、OOM 等问题，一脸懵逼")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/4f09fe3576573558bdc61985a8ad6a42.png",alt:"image-20200704111417472"}})]),t._v(" "),a("p",[t._v("大部分 Java 开发人员，除会在项目中使用到与 Java 平台相关的各种高精尖技术，对于 Java 技术的核心 Java 虚拟机了解甚少。")]),t._v(" "),a("p",[a("strong",[t._v("开发人员如何看待上层框架")])]),t._v(" "),a("p",[t._v("一些有一定工作经验的开发人员，打心眼儿里觉得 SSM、微服务等上层技术才是重点，基础技术并不重要，这其实是一种本末倒置的“病态”。")]),t._v(" "),a("p",[t._v("如果我们把核心类库的 API 比做数学公式的话，那么 Java 虚拟机的知识就好比公式的推导过程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/b8b64926837d355213a8ce16c119da6b.png",alt:"image-20200704112119729"}})]),t._v(" "),a("p",[t._v("计算机系统体系对我们来说越来越远，在不了解底层实现方式的前提下，通过高级语言很容易编写程序代码。但事实上计算机并不认识高级语言")]),t._v(" "),a("p",[a("strong",[t._v("我们为什么要学习 JVM？")])]),t._v(" "),a("ul",[a("li",[t._v("面试的需要（BATJ、TMD，PKQ 等面试都爱问）")]),t._v(" "),a("li",[t._v("中高级程序员必备技能\n"),a("ul",[a("li",[t._v("项目管理、调优的需求")])])]),t._v(" "),a("li",[t._v("追求极客的精神\n"),a("ul",[a("li",[t._v("比如：垃圾回收算法、JIT、底层原理")])])])]),t._v(" "),a("p",[a("strong",[t._v("Java vs C++")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/8fd76611be7ea81ebcfe7c4065dd3294.png",alt:"image-20200704112700211"}})]),t._v(" "),a("p",[t._v("垃圾收集机制为我们打理了很多繁琐的工作，大大提高了开发的效率，但是，垃圾收集也不是万能的，懂得 JVM 内部的内存结构、工作机制，是设计高扩展性应用和诊断运行时问题的基础，也是 Java 工程师进阶的必备能力。")]),t._v(" "),a("h2",{attrs:{id:"_1-2-面向人群及参考书目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-面向人群及参考书目"}},[t._v("#")]),t._v(" 1.2. 面向人群及参考书目")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/555790a8a0b57075bdc8b6116545e461.png",alt:"image-20210507095948516"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/33c00a1933a8fbdf47db211178125621.png",alt:"image-20200704145340513"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/f4cd25ee025347ae9481e26b89331041.png",alt:"image-20210507100021400"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/c56a02961383aca01f642eb9a1b81ab1.png",alt:"image-20210507100104455"}})]),t._v(" "),a("h2",{attrs:{id:"_1-3-java-及-jvm-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-java-及-jvm-简介"}},[t._v("#")]),t._v(" 1.3. Java 及 JVM 简介")]),t._v(" "),a("p",[a("strong",[t._v("TIOBE 语言热度排行榜："),a("a",{attrs:{href:"https://tiobe.com/tiobe-index/",target:"_blank",rel:"noopener noreferrer"}},[t._v("index | TIOBE - The Software Quality Company"),a("OutboundLink")],1)])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Programming Language")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("2021")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("2016")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("2011")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("2006")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("2001")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("1996")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("1991")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("1986")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("C")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Java")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("26")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Python")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("27")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("19")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("C++")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("C#")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("13")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Visual Basic")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("13")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("JavaScript")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("32")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("PHP")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SQL")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("R")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("17")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("31")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Lisp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("34")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("27")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("13")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("14")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("17")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Ada")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("36")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("28")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("17")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("16")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("(Visual) Basic")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("5")])])])]),t._v(" "),a("p",[t._v("世界上没有最好的编程语言，只有最适用于具体应用场景的编程语言")]),t._v(" "),a("p",[a("strong",[t._v("JVM：跨语言的平台")])]),t._v(" "),a("p",[t._v("Java 是目前应用最为广泛的软件开发平台之一。随着 Java 以及 Java 社区的不断壮大 Java 也早已不再是简简单单的一门计算机语言了，它更是一个平台、一种文化、一个社区。")]),t._v(" "),a("ul",[a("li",[t._v("作为一个平台，Java 虚拟机扮演着举足轻重的作用\n"),a("ul",[a("li",[t._v("Groovy、Scala、JRuby、Kotlin 等都是 Java 平台的一部分")])])]),t._v(" "),a("li",[t._v("作为灯种文化，Java 几乎成为了“开源”的代名词。\n"),a("ul",[a("li",[t._v("第三方开源软件和框架。如 Tomcat、Struts，MyBatis，Spring 等。")]),t._v(" "),a("li",[t._v("就连 JDK 和 JVM 自身也有不少开源的实现，如 openJDK、Harmony。")])])]),t._v(" "),a("li",[t._v("作为一个社区，Java 拥有全世界最多的技术拥护者和开源社区支持，有数不清的论坛和资料。从桌面应用软件、嵌入式开发到企业级应用、后台服务器、中间件，都可以看到 Java 的身影。其应用形式之复杂、参与人数之众多也令人咋舌。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/69fa9f3a1421d7dffc8b193084c8ae04.png",alt:"image-20200704151731216"}})]),t._v(" "),a("p",[t._v("每个语言都需要转换成字节码文件，最后转换的字节码文件都能通过 Java 虚拟机进行运行和处理")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/a9546b59e32abb4cc36b02b2f72bddad.png",alt:"image-20200704152052489"}})]),t._v(" "),a("ul",[a("li",[t._v("随着 Java7 的正式发布，Java 虚拟机的设计者们通过 JSR-292 规范基本实现在"),a("mark",[t._v("Java 虚拟机平台上运行非 Java 语言编写的程序。")])]),t._v(" "),a("li",[t._v("Java 虚拟机根本不关心运行在其内部的程序到底是使用何种编程语言编写的，"),a("mark",[t._v("它只关心“字节码”文件")]),t._v("。也就是说 Java 虚拟机拥有语言无关性，并不会单纯地与 Java 语言“终身绑定”，只要其他编程语言的编译结果满足并包含 Java 虚拟机的内部指令集、符号表以及其他的辅助信息，它就是一个有效的字节码文件，就能够被虚拟机所识别并装载运行。")])]),t._v(" "),a("p",[a("strong",[t._v("字节码")])]),t._v(" "),a("ul",[a("li",[t._v("我们平时说的 java 字节码，指的是用 java 语言编译成的字节码。准确的说任何能在 jvm 平台上执行的字节码格式都是一样的。所以应该统称为："),a("mark",[t._v("jvm 字节码")]),t._v("。")]),t._v(" "),a("li",[t._v("不同的编译器，可以编译出相同的字节码文件，字节码文件也可以在不同的 JVM 上运行。")]),t._v(" "),a("li",[t._v("Java 虚拟机与 Java 语言并没有必然的联系，它只与特定的二进制文件格式—Class 文件格式所关联，Class 文件中包含了 Java 虚拟机指令集（或者称为字节码、Bytecodes）和符号表，还有一些其他辅助信息。")])]),t._v(" "),a("p",[a("strong",[t._v("多语言混合编程")])]),t._v(" "),a("ul",[a("li",[a("mark",[t._v("Java 平台上的多语言混合编程正成为主流，通过特定领域的语言去解决特定领域的问题是当前软件开发应对日趋复杂的项目需求的一个方向。")])]),t._v(" "),a("li",[t._v("试想一下，在一个项目之中，并行处理用 Clojure 语言编写，展示层使用 JRuby/Rails，中间层则是 Java，每个应用层都将使用不同的编程语言来完成，而且，接口对每一层的开发者都是透明的，"),a("mark",[t._v("各种语言之间的交互不存在任何困难，就像使用自己语言的原生 API 一样方便，因为它们最终都运行在一个虚拟机之上。")])]),t._v(" "),a("li",[t._v("对这些运行于 Java 虚拟机之上、Java 之外的语言，来自系统级的、底层的支持正在迅速增强，以 JSR-292 为核心的一系列项目和功能改进（如 Da Vinci Machine 项目、Nashorn 引擎、InvokeDynamic 指令、java.lang.invoke 包等），"),a("mark",[t._v("推动 Java 虚拟机从“Java 语言的虚拟机”向 “多语言虚拟机”的方向发展。")])])]),t._v(" "),a("p",[a("strong",[t._v("如何真正搞懂 JVM？")])]),t._v(" "),a("p",[t._v("Java 虚拟机非常复杂，要想真正理解它的工作原理，最好的方式就是自己动手编写一个！")]),t._v(" "),a("p",[t._v("自己动手写一个 Java 虚拟机，难吗？")]),t._v(" "),a("p",[t._v("天下事有难易乎？")]),t._v(" "),a("p",[t._v("为之，则难者亦易矣；不为，则易者亦难矣")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/b97b2bf5eafd843f7b149e98ff4d615f.png",alt:"image-20210507102334642"}})]),t._v(" "),a("h2",{attrs:{id:"_1-4-java-发展的重大事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-java-发展的重大事件"}},[t._v("#")]),t._v(" 1.4. Java 发展的重大事件")]),t._v(" "),a("ul",[a("li",[t._v("1990 年，在 Sun 计算机公司中，由 Patrick Naughton、MikeSheridan 及 James Gosling 领导的小组 Green Team，开发出的新的程序语言，命名为 oak，后期命名为 Java")]),t._v(" "),a("li",[t._v("1995 年，Sun 正式发布 Java 和 HotJava 产品，Java 首次公开亮相。")]),t._v(" "),a("li",[t._v("1996 年 1 月 23 日，Sun Microsystems 发布了 JDK 1.0。")]),t._v(" "),a("li",[t._v("1998 年，JDK1.2 版本发布。同时，sun 发布了 JSP/Servlet、EJB 规范，以及将 Java 分成了 J2EE、J2SE 和 J2ME。这表明了 Java 开始向企业、桌面应用和移动设备应用 3 大领域挺进。")]),t._v(" "),a("li",[t._v("2000 年，JDK1.3 发布，"),a("mark",[t._v("Java HotSpot Virtual Machine 正式发布，成为 Java 的默认虚拟机。")])]),t._v(" "),a("li",[t._v("2002 年，JDK1.4 发布，古老的 Classic 虚拟机退出历史舞台。")]),t._v(" "),a("li",[t._v("2003 年年底，"),a("mark",[t._v("Java 平台的 Scala 正式发布，同年 Groovy 也加入了 Java 阵营。")])]),t._v(" "),a("li",[t._v("2004 年，JDK1.5 发布。同时 JDK1.5 改名为 JavaSE5.0。")]),t._v(" "),a("li",[t._v("2006 年，JDK6 发布。同年，"),a("mark",[t._v("Java 开源并建立了 OpenJDK")]),t._v("。顺理成章，"),a("mark",[t._v("Hotspot 虚拟机也成为了 openJDK 中的默认虚拟机。")])]),t._v(" "),a("li",[t._v("2007 年，"),a("mark",[t._v("Java 平台迎来了新伙伴 Clojure。")])]),t._v(" "),a("li",[t._v("2008 年，Oracle 收购了 BEA，"),a("mark",[t._v("得到了 JRockit 虚拟机。")])]),t._v(" "),a("li",[t._v("2009 年，Twitter 宣布把后台大部分程序从 Ruby 迁移到 Scala，这是 Java 平台的又一次大规模应用。")]),t._v(" "),a("li",[t._v("2010 年，Oracle 收购了 Sun，"),a("mark",[t._v("获得 Java 商标和最真价值的 HotSpot 虚拟机")]),t._v("。此时，Oracle 拥有市场占用率最高的两款虚拟机 HotSpot 和 JRockit，并计划在未来对它们进行整合：HotRockit")]),t._v(" "),a("li",[t._v("2011 年，JDK7 发布。在 JDK1.7u4 中，"),a("mark",[t._v("正式启用了新的垃圾回收器 G1。")])]),t._v(" "),a("li",[t._v("2017 年，JDK9 发布。"),a("mark",[t._v("将 G1 设置为默认 Gc，替代 CMS")])]),t._v(" "),a("li",[t._v("同年，"),a("mark",[t._v("IBM 的 J9 开源")]),t._v("，形成了现在的 Open J9 社区")]),t._v(" "),a("li",[t._v("2018 年，Android 的 Java 侵权案判决，Google 赔偿 Oracle 计 88 亿美元")]),t._v(" "),a("li",[t._v("同年，Oracle 宣告 JavaEE 成为历史名词 JDBC、JMS、Servlet 赠予 Eclipse 基金会")]),t._v(" "),a("li",[t._v("同年，JDK11 发布，LTS 版本的 JDK，"),a("mark",[t._v("发布革命性的 ZGC，调整 JDK 授权许可")])]),t._v(" "),a("li",[t._v("2019 年，JDK12 发布，加入 RedHat 领导开发的"),a("mark",[t._v("shenandoah GC")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/577ba2f5110b972116602fb2ce3291e8.png",alt:"image-20200704182035810"}})]),t._v(" "),a("p",[t._v("在 JDK11 之前，OracleJDK 中还会存在一些 OpenJDK 中没有的、闭源的功能。但在 JDK11 中，我们可以认为 OpenJDK 和 OracleJDK 代码实质上已经完全一致的程度。")]),t._v(" "),a("p",[t._v("不过，主流的 JDK 8 在 2019 年 01 月之后就被宣布停止更新了。另外， JDK 11 及以后的版本也不再提供免费的长期支持（LTS），而且 JDK 15 和 JDK 16 也不是一个长期支持的版本，最新的 JDK 15 只支持 6 个月时间，到 2021 年 3 月，所以千万不要把 JDK 15 等非长期支持版本用在生产。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/8a37d7f7b848e7453e622270217ce7dc.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"_1-5-虚拟机与-java-虚拟机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-虚拟机与-java-虚拟机"}},[t._v("#")]),t._v(" 1.5. 虚拟机与 Java 虚拟机")]),t._v(" "),a("p",[a("strong",[t._v("虚拟机")])]),t._v(" "),a("p",[t._v("所谓虚拟机（Virtual Machine），就是一台虚拟的计算机。它是一款软件，用来执行一系列虚拟计算机指令。大体上，虚拟机可以分为系统虚拟机和程序虚拟机。")]),t._v(" "),a("ul",[a("li",[t._v("大名鼎鼎的 Visual Box，Mware 就属于系统虚拟机，它们"),a("mark",[t._v("完全是对物理计算机的仿真")]),t._v("，提供了一个可运行完整操作系统的软件平台。")]),t._v(" "),a("li",[t._v("程序虚拟机的典型代表就是 Java 虚拟机，它"),a("mark",[t._v("专门为执行单个计算机程序而设计")]),t._v("，在 Java 虚拟机中执行的指令我们称为 Java 字节码指令。")])]),t._v(" "),a("p",[t._v("无论是系统虚拟机还是程序虚拟机，在上面运行的软件都被限制于虚拟机提供的资源中。")]),t._v(" "),a("p",[a("strong",[t._v("Java 虚拟机")])]),t._v(" "),a("ul",[a("li",[t._v("Java 虚拟机是一台执行 Java 字节码的虚拟计算机，它拥有独立的运行机制，其运行的 Java 字节码也未必由 Java 语言编译而成。")]),t._v(" "),a("li",[t._v("JVM 平台的各种语言可以共享 Java 虚拟机带来的跨平台性、优秀的垃圾回器，以及可靠的即时编译器。")]),t._v(" "),a("li",[a("mark",[t._v("Java 技术的核心就是 Java 虚拟机")]),t._v("（JVM，Java Virtual Machine），因为所有的 Java 程序都运行在 Java 虚拟机内部。")])]),t._v(" "),a("p",[t._v("作用")]),t._v(" "),a("ul",[a("li",[t._v("Java 虚拟机就是二进制字节码的运行环境，负责装载字节码到其内部，解释/编译为对应平台上的机器指令执行。每一条 Java 指令，Java 虚拟机规范中都有详细定义，如怎么取操作数，怎么处理操作数，处理结果放在哪里。")])]),t._v(" "),a("p",[t._v("特点")]),t._v(" "),a("ul",[a("li",[t._v("一次编译，到处运行")]),t._v(" "),a("li",[t._v("自动内存管理")]),t._v(" "),a("li",[t._v("自动垃圾回收功能")])]),t._v(" "),a("p",[a("strong",[t._v("JVM 的位置")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/6b5c24b8d634d5a741ef5d8a90db1123.png",alt:"image-20200704183048061"}})]),t._v(" "),a("p",[t._v("JVM 是运行在操作系统之上的，它与硬件没有直接的交互\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/cd8b795cf080b8ba40f6915b6242c8af.png",alt:"image-20210507104030823"}})]),t._v(" "),a("h2",{attrs:{id:"_1-6-jvm-的整体结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-jvm-的整体结构"}},[t._v("#")]),t._v(" 1.6. JVM 的整体结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/1bf0b96d082d684a818bc36a8f864a89.png",alt:"image-20200704183436495"}})]),t._v(" "),a("ul",[a("li",[t._v("HotSpot VM 是目前市面上高性能虚拟机的代表作之一。")]),t._v(" "),a("li",[t._v("它采用解释器与即时编译器并存的架构。")]),t._v(" "),a("li",[t._v("在今天，Java 程序的运行性能早已脱胎换骨，已经达到了可以和 C/C++程序一较高下的地步。")])]),t._v(" "),a("h2",{attrs:{id:"_1-7-java-代码执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-java-代码执行流程"}},[t._v("#")]),t._v(" 1.7. Java 代码执行流程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/4ce09e21efc2533d2b80f45f97b35a48.png",alt:"image-20200704210429535"}})]),t._v(" "),a("h2",{attrs:{id:"_1-8-jvm-的架构模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-jvm-的架构模型"}},[t._v("#")]),t._v(" 1.8. JVM 的架构模型")]),t._v(" "),a("p",[t._v("Java 编译器输入的指令流基本上是一种基于"),a("mark",[t._v("栈的指令集架构")]),t._v("，另外一种指令集架构则是基于"),a("mark",[t._v("寄存器的指令集架构")]),t._v("。")]),t._v(" "),a("p",[t._v("具体来说：这两种架构之间的区别：")]),t._v(" "),a("p",[a("strong",[t._v("基于栈式架构的特点")])]),t._v(" "),a("ul",[a("li",[t._v("设计和实现更简单，适用于资源受限的系统")]),t._v(" "),a("li",[t._v("避开了寄存器的分配难题：使用零地址指令方式分配")]),t._v(" "),a("li",[t._v("指令流中的指令大部分是零地址指令，其执行过程依赖于操作栈。指令集更小，编译器容易实现")]),t._v(" "),a("li",[t._v("不需要硬件支持，可移植性更好，更好实现跨平台")])]),t._v(" "),a("p",[a("strong",[t._v("基于寄存器架构的特点")])]),t._v(" "),a("ul",[a("li",[t._v("典型的应用是 x86 的二进制指令集：比如传统的 PC 以及 Android 的 Davlik 虚拟机")]),t._v(" "),a("li",[t._v("指令集架构则完全依赖硬件，可移植性差")]),t._v(" "),a("li",[t._v("性能优秀和执行更高效")]),t._v(" "),a("li",[t._v("花费更少的指令去完成一项操作")]),t._v(" "),a("li",[t._v("在大部分情况下，基于寄存器架构的指令集往往都以一地址指令、二地址指令和三地址指令为主，而基于栈式架构的指令集却是以零地址指令为主")])]),t._v(" "),a("p",[a("strong",[t._v("举例 1")])]),t._v(" "),a("p",[t._v("同样执行 2+3 这种逻辑操作，其指令分别如下：")]),t._v(" "),a("p",[t._v("基于栈的计算流程（以 Java 虚拟机为例）：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("iconst_2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常量2入栈")]),t._v("\nistore_1\niconst_3 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常量3入栈")]),t._v("\nistore_2\niload_1\niload_2\niadd "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常量2/3出栈，执行相加")]),t._v("\nistore_0 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果5入栈")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("而基于寄存器的计算流程")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("mov eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将eax寄存器的值设为1")]),t._v("\nadd eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使eax寄存器的值加3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("举例 2")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" javap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Code")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Locals")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Args_size")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bipush        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" istore_1\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" sipush        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" istore_2\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" sipush        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" istore_3\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" iload_1\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" iload_2\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" iadd\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" iload_3\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" imul\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ireturn\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("p",[a("strong",[t._v("总结")])]),t._v(" "),a("p",[a("mark",[t._v("由于跨平台性的设计，Java 的指令都是根据栈来设计的。")]),t._v("不同平台 CPU 架构不同，所以不能设计为基于寄存器的。优点是跨平台，指令集小，编译器容易实现，缺点是性能下降，实现同样的功能需要更多的指令。")]),t._v(" "),a("p",[t._v("时至今日，尽管嵌入式平台已经不是 Java 程序的主流运行平台了（准确来说应该是 HotSpotVM 的宿主环境已经不局限于嵌入式平台了），那么为什么不将架构更换为基于寄存器的架构呢？")]),t._v(" "),a("h2",{attrs:{id:"_1-9-jvm-的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-9-jvm-的生命周期"}},[t._v("#")]),t._v(" 1.9. JVM 的生命周期")]),t._v(" "),a("p",[a("strong",[t._v("虚拟机的启动")])]),t._v(" "),a("p",[t._v("Java 虚拟机的启动是通过引导类加载器（bootstrap class loader）创建一个初始类（initial class）来完成的，这个类是由虚拟机的具体实现指定的。")]),t._v(" "),a("p",[a("strong",[t._v("虚拟机的执行")])]),t._v(" "),a("ul",[a("li",[t._v("一个运行中的 Java 虚拟机有着一个清晰的任务：执行 Java 程序。")]),t._v(" "),a("li",[t._v("程序开始执行时他才运行，程序结束时他就停止。")]),t._v(" "),a("li",[a("mark",[t._v("执行一个所谓的 Java 程序的时候，真真正正在执行的是一个叫做 Java 虚拟机的进程。")])])]),t._v(" "),a("p",[a("strong",[t._v("虚拟机的退出")])]),t._v(" "),a("p",[t._v("有如下的几种情况：")]),t._v(" "),a("ul",[a("li",[t._v("程序正常执行结束")]),t._v(" "),a("li",[t._v("程序在执行过程中遇到了异常或错误而异常终止")]),t._v(" "),a("li",[t._v("由于操作系统用现错误而导致 Java 虚拟机进程终止")]),t._v(" "),a("li",[t._v("某线程调用 Runtime 类或 system 类的 exit 方法，或 Runtime 类的 halt 方法，并且 Java 安全管理器也允许这次 exit 或 halt 操作。")]),t._v(" "),a("li",[t._v("除此之外，JNI（Java Native Interface）规范描述了用 JNI Invocation API 来加载或卸载 Java 虚拟机时，Java 虚拟机的退出情况。")])]),t._v(" "),a("h2",{attrs:{id:"x-jvm-的发展历程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-jvm-的发展历程"}},[t._v("#")]),t._v(" X. JVM 的发展历程")]),t._v(" "),a("h3",{attrs:{id:"sun-classic-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sun-classic-vm"}},[t._v("#")]),t._v(" Sun Classic VM")]),t._v(" "),a("ul",[a("li",[t._v("早在 1996 年 Java1.0 版本的时候，Sun 公司发布了一款名为 sun classic VM 的 Java 虚拟机，它同时也是"),a("mark",[t._v("世界上第一款商用 Java 虚拟机")]),t._v("，JDK1.4 时完全被淘汰。")]),t._v(" "),a("li",[t._v("这款虚拟机内部只提供解释器。现在还有及时编译器，因此效率比较低，而及时编译器会把热点代码缓存起来，那么以后使用热点代码的时候，效率就比较高。")]),t._v(" "),a("li",[t._v("如果使用 JIT 编译器，就需要进行外挂。但是一旦使用了 JIT 编译器，JIT 就会接管虚拟机的执行系统。解释器就不再工作。解释器和编译器不能配合工作。")]),t._v(" "),a("li",[t._v("现在 hotspot 内置了此虚拟机。")])]),t._v(" "),a("h3",{attrs:{id:"exact-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exact-vm"}},[t._v("#")]),t._v(" Exact VM")]),t._v(" "),a("ul",[a("li",[t._v("为了解决上一个虚拟机问题，jdk1.2 时，Sun 提供了此虚拟机。")]),t._v(" "),a("li",[t._v("Exact Memory Management：准确式内存管理\n"),a("ul",[a("li",[t._v("也可以叫 Non-Conservative/Accurate Memory Management")]),t._v(" "),a("li",[t._v("虚拟机可以知道内存中某个位置的数据具体是什么类型。")])])]),t._v(" "),a("li",[t._v("具备现代高性能虚拟机的维形\n"),a("ul",[a("li",[t._v("热点探测")]),t._v(" "),a("li",[t._v("编译器与解释器混合工作模式")])])]),t._v(" "),a("li",[t._v("只在 solaris 平台短暂使用，其他平台上还是 classic vm\n"),a("ul",[a("li",[t._v("英雄气短，终被 Hotspot 虚拟机替换")])])])]),t._v(" "),a("h3",{attrs:{id:"hotspot-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hotspot-vm"}},[t._v("#")]),t._v(" HotSpot VM")]),t._v(" "),a("ul",[a("li",[t._v("HotSpot 历史\n"),a("ul",[a("li",[t._v("最初由一家名为“Longview Technologies”的小公司设计")]),t._v(" "),a("li",[t._v("1997 年，此公司被 sun 收购；2009 年，Sun 公司被甲骨文收购。")]),t._v(" "),a("li",[t._v("JDK1.3 时，HotSpot VM 成为默认虚拟机")])])]),t._v(" "),a("li",[a("mark",[t._v("目前 Hotspot 占有绝对的市场地位，称霸武林。")]),t._v(" "),a("ul",[a("li",[t._v("不管是现在仍在广泛使用的 JDK6，还是使用比例较多的 JDK8 中，默认的虚拟机都是 HotSpot")]),t._v(" "),a("li",[t._v("Sun / Oracle JDK 和 OpenJDK 的默认虚拟机")]),t._v(" "),a("li",[t._v("因此本课程中默认介绍的虚拟机都是 HotSpot，相关机制也主要是指 HotSpot 的 Gc 机制。（比如其他两个商用虚机都没有方法区的概念）")])])]),t._v(" "),a("li",[t._v("从服务器、桌面到移动端、嵌入式都有应用。")]),t._v(" "),a("li",[t._v("名称中的 HotSpot 指的就是它的热点代码探测技术。\n"),a("ul",[a("li",[t._v("通过计数器找到最具编译价值代码，触发即时编译或栈上替换")]),t._v(" "),a("li",[t._v("通过编译器与解释器协同工作，在最优化的程序响应时间与最佳执行性能中取得平衡")])])])]),t._v(" "),a("h3",{attrs:{id:"jrockit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jrockit"}},[t._v("#")]),t._v(" JRockit")]),t._v(" "),a("ul",[a("li",[a("p",[a("mark",[t._v("专注于服务器端应用")])]),t._v(" "),a("ul",[a("li",[t._v("它可以不太关注程序启动速度，因此 JRockit 内部不包含解析器实现，全部代码都靠即时编译器编译后执行。")])])]),t._v(" "),a("li",[a("p",[t._v("大量的行业基准测试显示，"),a("mark",[t._v("JRockit JVM 是世界上最快的 JVM。")])]),t._v(" "),a("ul",[a("li",[t._v("使用 JRockit 产品，客户已经体验到了显著的性能提高（一些超过了 70%）和硬件成本的减少（达 50%）。")])])]),t._v(" "),a("li",[a("p",[t._v("优势：全面的 Java 运行时解决方案组合")]),t._v(" "),a("ul",[a("li",[t._v("JRockit 面向延迟敏感型应用的解决方案 JRockit Real Time 提供以毫秒或微秒级的 JVM 响应时间，适合财务、军事指挥、电信网络的需要")]),t._v(" "),a("li",[t._v("MissionControl 服务套件，它是一组以极低的开销来监控、管理和分析生产环境中的应用程序的工具。")])])]),t._v(" "),a("li",[a("p",[t._v("2008 年，JRockit 被 oracle 收购。")])]),t._v(" "),a("li",[a("p",[t._v("Oracle 表达了整合两大优秀虚拟机的工作，大致在 JDK8 中完成。整合的方式是在 HotSpot 的基础上，移植 JRockit 的优秀特性。")])]),t._v(" "),a("li",[a("p",[t._v("高斯林：目前就职于谷歌，研究人工智能和水下机器人")])])]),t._v(" "),a("h3",{attrs:{id:"ibm-的-j9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ibm-的-j9"}},[t._v("#")]),t._v(" IBM 的 J9")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("全称：IBM Technology for Java Virtual Machine，简称 IT4J，内部代号：J9")])]),t._v(" "),a("li",[a("p",[t._v("市场定位与 HotSpot 接近，服务器端、桌面应用、嵌入式等多用途 VM")])]),t._v(" "),a("li",[a("p",[t._v("广泛用于 IBM 的各种 Java 产品。")])]),t._v(" "),a("li",[a("p",[t._v("目前，有影响力的三大商用虚拟机之一，也号称是世界上最快的 Java 虚拟机。")])]),t._v(" "),a("li",[a("p",[t._v("2017 年左右，IBM 发布了开源 J9VM，命名为 openJ9，交给 EClipse 基金会管理，也称为 Eclipse OpenJ9")])])]),t._v(" "),a("h3",{attrs:{id:"kvm-和-cdc-cldc-hotspot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kvm-和-cdc-cldc-hotspot"}},[t._v("#")]),t._v(" KVM 和 CDC / CLDC Hotspot")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Oracle 在 Java ME 产品线上的两款虚拟机为：CDC/CLDC HotSpot Implementation VM")])]),t._v(" "),a("li",[a("p",[t._v("KVM（Kilobyte）是 CLDC-HI 早期产品")])]),t._v(" "),a("li",[a("p",[t._v("目前移动领域地位尴尬，智能机被 Android 和 iOS 二分天下。")])]),t._v(" "),a("li",[a("p",[t._v("KVM 简单、轻量、高度可移植，面向更低端的设备上还维持自己的一片市场")]),t._v(" "),a("ul",[a("li",[t._v("智能控制器、传感器")]),t._v(" "),a("li",[t._v("老人手机、经济欠发达地区的功能手机")])])]),t._v(" "),a("li",[a("p",[t._v("所有的虚拟机的原则：一次编译，到处运行。")])])]),t._v(" "),a("h3",{attrs:{id:"azul-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#azul-vm"}},[t._v("#")]),t._v(" Azul VM")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("前面三大“高性能 Java 虚拟机”使用在通用硬件平台上这里 Azul VW 和 BEA Liquid VM 是"),a("mark",[t._v("与特定硬件平台绑定、软硬件配合的专有虚拟机")])]),t._v(" "),a("ul",[a("li",[t._v("高性能 Java 虚拟机中的战斗机。")])])]),t._v(" "),a("li",[a("p",[t._v("Azul VM 是 Azul Systems 公司在 HotSpot 基础上进行大量改进，运行于 Azul Systems 公司的专有硬件 Vega 系统上的 Java 虚拟机。")])]),t._v(" "),a("li",[a("p",[a("mark",[t._v("每个 Azul VM 实例都可以管理至少数十个 CPU 和数百 GB 内存的硬件资源，并提供在巨大内存范围内实现可控的 GC 时间的垃圾收集器、专有硬件优化的线程调度等优秀特性。")])])]),t._v(" "),a("li",[a("p",[t._v("2010 年，AzulSystems 公司开始从硬件转向软件，发布了自己的 Zing JVM，可以在通用 x86 平台上提供接近于 Vega 系统的特性。")])])]),t._v(" "),a("h3",{attrs:{id:"liquid-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#liquid-vm"}},[t._v("#")]),t._v(" Liquid VM")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("高性能 Java 虚拟机中的战斗机。")])]),t._v(" "),a("li",[a("p",[t._v("BEA 公司开发的，直接运行在自家 Hypervisor 系统上")])]),t._v(" "),a("li",[a("p",[t._v("Liquid VM 即是现在的 JRockit VE（Virtual Edition），"),a("mark",[t._v("Liquid VM 不需要操作系统的支持，或者说它自己本身实现了一个专用操作系统的必要功能，如线程调度、文件系统、网络支持等。")])])]),t._v(" "),a("li",[a("p",[t._v("随着 JRockit 虚拟机终止开发，Liquid vM 项目也停止了。")])])]),t._v(" "),a("h3",{attrs:{id:"apache-harmony"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache-harmony"}},[t._v("#")]),t._v(" Apache Harmony")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Apache 也曾经推出过与 JDK1.5 和 JDK1.6 兼容的 Java 运行平台 Apache Harmony。")])]),t._v(" "),a("li",[a("p",[t._v("它是 IBM 和 Intel 联合开发的开源 JVM，受到同样开源的 OpenJDK 的压制，Sun 坚决不让 Harmony 获得 JCP 认证，最终于 2011 年退役，IBM 转而参与 OpenJDK")])]),t._v(" "),a("li",[a("p",[t._v("虽然目前并没有 Apache Harmony 被大规模商用的案例，但是它的 Java 类库代码吸纳进了 Android SDK。")])])]),t._v(" "),a("h3",{attrs:{id:"micorsoft-jvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#micorsoft-jvm"}},[t._v("#")]),t._v(" Micorsoft JVM")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("微软为了在 IE3 浏览器中支持 Java Applets，开发了 Microsoft JVM。")])]),t._v(" "),a("li",[a("p",[t._v("只能在 Windows 平台下运行。但确是当时 Windows 下性能最好的 Java VM。")])]),t._v(" "),a("li",[a("p",[t._v("1997 年，Sun 以侵犯商标、不正当竞争罪名指控微软成功，赔了 Sun 很多钱。微软 WindowsXP SP3 中抹掉了其 VM。现在 Windows 上安装的 jdk 都是 HotSpot。")])])]),t._v(" "),a("h3",{attrs:{id:"taobao-jvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#taobao-jvm"}},[t._v("#")]),t._v(" Taobao JVM")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由 AliJVM 团队发布。阿里，国内使用 Java 最强大的公司，覆盖云计算、金融、物流、电商等众多领域，需要解决高并发、高可用、分布式的复合问题。有大量的开源产品。")])]),t._v(" "),a("li",[a("p",[a("mark",[t._v("基于 OpenJDK 开发了自己的定制版本 AlibabaJDK")]),t._v("，简称 AJDK。是整个阿里 Java 体系的基石。")])]),t._v(" "),a("li",[a("p",[t._v("基于 OpenJDK Hotspot VM 发布的国内第一个优化、"),a("mark",[t._v("深度定制且开源的高性能服务器版 Java 虚拟机")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("创新的 GCIH（GC invisible heap）技术实现了 off-heap，"),a("mark",[t._v("即将生命周期较长的 Java 对象从 heap 中移到 heap 之外，并且 GC 不能管理 GCIH 内部的 Java 对象，以此达到降低 GC 的回收频率和提升 GC 的回收效率的目的。")])]),t._v(" "),a("li",[t._v("GCIH 中的"),a("mark",[t._v("对象还能够在多个 Java 虚拟机进程中实现共享")])]),t._v(" "),a("li",[t._v("使用 crc32 指令实现 JVM intrinsic 降低 JNI 的调用开销")]),t._v(" "),a("li",[t._v("PMU hardware 的 Java profiling tool 和诊断协助功能")]),t._v(" "),a("li",[t._v("针对大数据场景的 ZenGc")])])]),t._v(" "),a("li",[a("p",[t._v("taobao vm 应用在阿里产品上性能高，硬件严重依赖 intel 的 cpu，损失了兼容性，但提高了性能")]),t._v(" "),a("ul",[a("li",[t._v("目前已经在淘宝、天猫上线，把 oracle 官方 JvM 版本全部替换了。")])])])]),t._v(" "),a("h3",{attrs:{id:"dalvik-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dalvik-vm"}},[t._v("#")]),t._v(" Dalvik VM")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("谷歌开发的，应用于 Android 系统，并在 Android2.2 中提供了 JIT，发展迅猛。")])]),t._v(" "),a("li",[a("p",[t._v("Dalvik VM 只能称作虚拟机，而不能称作“Java 虚拟机”，它没有遵循 Java 虚拟机规范，不能直接执行 Java 的 Class 文件")])]),t._v(" "),a("li",[a("p",[t._v("基于寄存器架构，不是 jvm 的栈架构。")])]),t._v(" "),a("li",[a("p",[t._v("执行的是编译以后的 dex（Dalvik Executable）文件。执行效率比较高。")]),t._v(" "),a("ul",[a("li",[t._v("它执行的 dex（Dalvik Executable）文件可以通过 class 文件转化而来，使用 Java 语法编写应用程序，可以直接使用大部分的 Java API 等。")])])]),t._v(" "),a("li",[a("p",[t._v("Android 5.0 使用支持提前编译（Ahead of Time Compilation，AoT）的 ART VM 替换 Dalvik VM。")])])]),t._v(" "),a("h3",{attrs:{id:"graal-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graal-vm"}},[t._v("#")]),t._v(" Graal VM")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('2018 年 4 月，oracle Labs 公开了 Graal VM，号称 "Run Programs Faster Anywhere"，野心勃勃。与 1995 年 java 的”write once，run anywhere"遥相呼应。')])]),t._v(" "),a("li",[a("p",[t._v("Graal VM 在 HotSpot VM 基础上增强而成的跨语言全栈虚拟机，可以作为“任何语言” 的运行平台使用。语言包括：Java、Scala、Groovy、Kotlin；C、C++、Javascript、Ruby、Python、R 等")])]),t._v(" "),a("li",[a("p",[t._v("支持不同语言中混用对方的接口和对象，支持这些语言使用已经编写好的本地库文件")])]),t._v(" "),a("li",[a("p",[t._v("工作原理是将这些语言的源代码或源代码编译后的中间格式，通过解释器转换为能被 Graal VM 接受的中间表示。Graal VM 提供 Truffle 工具集快速构建面向一种新语言的解释器。在运行时还能进行即时编译优化，获得比原生编译器更优秀的执行效率。")])]),t._v(" "),a("li",[a("p",[t._v("如果说 HotSpot 有一天真的被取代，Graal VM 希望最大。但是 Java 的软件生态没有丝毫变化。")])])]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("具体 JVM 的内存结构，其实取决于其实现，不同厂商的 JVM，或者同一厂商发布的不同版本，都有可能存在一定差异。主要以 Oracle HotSpot VM 为默认虚拟机。")])])}),[],!1,null,null,null);a.default=_.exports}}]);